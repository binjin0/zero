1. Flexbox
가로 혹은 세로로 정렬하기 위해 나온 개념 
컨테이너와 아이템을 짝을 이루고 있어야한다.
정렬하고자하는 아이템들의 부모에게 flex속성을 주면 아이템이 정렬된다.
부모자식관계가 성립되어야지 사용 가능

2. flexbox 용어
flexbox는 1차원정렬에 관한 css
-flex container : 부모 영역
-flex item : 자식영역
=> 부모에 사용할 수 있는 속성이 있고 아이템에 사용할 수 있는 속성이 있다.

-main axis 주축(왼쪽에서 오른쪽)
-cross axis 교차축(위에서 아래)

=>이러한 축의 방향을 바꿀 수 있다.

3. display
: 요소의 내부와 외부 레이아웃을 정의할 수 있다. 아래의 속성들을 이용하여!!

종류)
block
inline-block
inline
flex : container에 적용할 수 있는 속성(==부모영역에 사용가능)
grid
...

> display를 크게 두종류로 나누면?
display-outside 바깥쪽과 어떻게 배치할지
: block, inline

display-inside 안쪽에 있는 아이템을 어떻게 배치할지
: flex, grid 등

=> 이 두개를 섞어서 사용가능
ex)바깥쪽과의 관계는 inline으로 바꾸고 안쪽 아이템들의 배치는 flex를 쓰고 싶을 때는 inline-flex 이렇게 쓸 수 있음 

4. flex-direction
container에 사용할 수 있는 속성
flex-container내의 아이템을 배치할 때 사용할 주축 및 방향을 지정하기 위해 쓴다.
-주축의 위치를 수평으로 할건지 수직으로 할 것인지 결정가능
-주축의 방향 설정가능(정방향, 역방향)

=>따라서 사용할 수 있는 경우의 수가 2*2로 총 4가지 겠죠?

속성값
row : 왼쪽에서 오른쪽
row-reverse : 오른쪽에서 왼쪽에서
column : 위에서 아래
column-reverse : 아래에서 위

5. flex-wrap
container에 사용할 수 있는 속성
flex-item요소들이 강제로 한줄에 배치되게 하것인지, 또는 가능한 영역 내에서 벗어나지 않고 여러행으로
나누어 표현할 것인지 결정하는 속성

속성값
nowrap : flex-container 부모 영억을 벗어나더라도 flex-item 요소들을 한줄에 배치
시작점은 flex-dirextion에 의해 결정된 방향으로 적용된다.
wrap  : flex-item 요소들이 내부 로직에 의해 분할되어 여러 행에 걸쳐서 배치된다.(즉 자신의 크기를 지켜서 배치될 수 있다. ) nowrap 속성과 마찬가지로 요소가 배치되는 시작점은 flex-dirextino에 의해 결정된다.
wrap-reverse : wrap속성값과 동일하지만, 요소가 나열되는 시작점과 끝점의 기준이 반대로 배치된다.


6.flex-flow
flex-direction, flex-wrap를 같이 쓸 수 있는 단축 속성. 스페이싱으로 구분해서 사용하면 된다. 

7. order
flex-item에서 사용하는 속성
초기값 0
플렉스 또는 그리드 컨테이너 안에서 현재 요소의 배치 순서를 지정한다.
초깃값은 다 0이거 모든 item이 0일때는 코드 순서로 순서가 배치된다.
order값이 작은 값이 앞으로 큰 값이 뒤로간다. 마이너스 값도 사용 가능.

8. flex-grow
flex-item 요소가 flex-container 요소 내부에서 할당 가능한 공간의 정도를 선언한다.
즉 flex-item요소들이 동일한 flex-grow를 갖는다면 flex-contanar 내부에서 
동일한 공간을 할당받는다.

주로 flex-shrink, flex-basis 속성을 함께 사용한다. flex 속성으로 축양형으로 나타낼 수 있다.

9. flex-shrink
줄어들음.
flex-item 요소의 크기가 flex-container 요소의 크기보다 클때 사용.
설정된 숫자 값에 따라 flex-container 요소 내부에서 flex-item 요소의 크기가 축소된다.
초기값은 1로 선언하지 않아도 자동 선언된다. 즉 부모 컨테이너의 크기보다 item크기가 클때 자동 일정
비율로 줄어든다는 것이다.