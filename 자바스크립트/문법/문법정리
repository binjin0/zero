1. 주석 //기본 한줄 주석 /*기본 한줄 주석*/ /* 여러 줄 주석 */ 주석에 의지하지
않는 것이 좋은 개발자이지만 상황에 따라 쓰는 것도 좋다.개발자이지만 2. 값 & 식 &
문 - 값 '문자열 값' true false null undefined //...래퍼런스 타입값 -값으로
귀결된 식 or 연산식(expression) 1+1 1>2 '안녕'+'하'+'세요' -문(statement) 행동을
한다. 흐름을 제어한다. 지시문(지시문안에는 식이 들어가겠죠?, 식에는 값, 연산자가
사용되겠죠?)으로 인터프리터에게 명령한다. { ... } 3.식별자 변수,함수, 혹은
속성을 식별하는 문자열이다. 대소문자 구별. 유니코드(_,$,0-9)로 구성가능.
숫자로시작 불가능 언어 내장 예약어 사용 불가능 문자열로 시작한다. 4. 리터럴
데이터 값 5. use strict 엄격모드 기존에조용히 무시되던 에러들을 throwing한다.
dddd ---------------------------------------- 2. 값&식&문 사람과 사람이 대화할때
문법이 틀려도 어느정도 이해 가능 그러나 프로그래밍 언어에서 문법을 지키지
않을때는 =>에러 발생 값 -하나의 값 표현식(식) expression -값을 생성 ex) 1 =>값,
식 - 값으로 귀결 ex) 1+1 =>값으로 귀결된 식 문 statement 어떠한 행동을 한다.
그리고 흐름을 제어한다. { } => 이러한 형태
---------------------------------------- 3. 식별자 - 문자열의 시작 - 언어의 내장
예약어와 중복 피해야함 ---------------------------------------- 4. 리터럴
데이터를 나타내는 값 ex) 123 'jang' [1,2,3] 이러한 것들 모두 리터럴
