/*
scope : 범위

*전역 스코프 : 블록{} 바깥이나 함수 바깥에 선언 된 변수
- 전역 스코프에 변수를 선언하면 어떤위치에서든 접근 가능
- 전역공간에서 내부 블록에는 접근할 수 없음. 스코프가 있기 때문에 
(프로그램이 실행되는 시점 => 런타임 시점)
==> 따라서 전역변수를 계속 사용하면 런타임 시점을 찾기 어려움.

*지역 스코프 : 코드의 특정 부분에서만 사용할 수 있는 변수
- 함수 스코프 : 함수 내부에서 선언 된 변수. 함수 내부에서만 접근 가능.(var, let, const 동일)
- 블록 스코프 : 블록{}, if문, for문 블록 내부에서 선언 된 변수. 블록내부에서만 접근 가능.
(단, 블록 내부에서 선언 한 변수는 블록 내부에서만 사용 가능한 게 정상이지만 var은 내부에 선언해도 바깥에서 사용 가능.
  예를들면 함수 안에 for문을 작성했을 때 var로 선언하면 for문 밖에서 for문안에서 선언한 i변수를 출력해도 출력된다.
  그러나 let과 const는 출력되지 않음.)

 */
var foo = "foo"; //전역공간
{
  foo = "foooooooo";
  console.log(foo);
}
function func() {
  foo = "foooo";
  console.log(foo);
}
if (true) {
  foo = "fooooooooooooo";
  console.log(foo);
}

console.log(foo);

func();
